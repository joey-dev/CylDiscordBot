_a7a‍.x([["Event",()=>Event]]);class Event {
    constructor(command, message, args, client, settings) {
        this.esmImport = require('esm')(module);

        const file = command.split('-')[0];

        switch (file) {
            case 'event':
            case 'help':
                this.help(message, settings);
                break;
            case 'host':
                this.host(command, message, args, settings);
                break;
            case 'stop':
                this.stop(command, message, args, settings);
                break;
        }
    }

    help(message, settings) {
        const importHelp = this.esmImport('./help');
        new importHelp.Help(message, settings);
    }

    host(command, message, args, settings) {
        const importHost = this.esmImport('./Host');
        new importHost.Host(command, message, args, settings);
    }

    stop(command, message, args, settings) {
        const importStop = this.esmImport('./Stop');
        new importStop.Stop(command, message, args, settings);
    }
}
