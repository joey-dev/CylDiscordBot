_9e1‍.x([["Stop",()=>Stop]]);class Stop {
    constructor(command, message, args, settings) {
        this.esmImport = require('esm')(module);
        this.settings = settings.event

        const splitCommand = command.split('-');
        const game = splitCommand[1];

        let isHelp = false;
        if (splitCommand.length === 3) {
            if (splitCommand[2] === 'help') {
                isHelp = true;
            }
        }

        if (isHelp) {
            switch (game) {
                case 'scp':
                    this.scpSecretLaboratoryHelp(message);
                    break;
                default:
                    this.wrongGame(message);
            }
        } else {
            switch (game) {
                case 'help':
                    this.help(message);
                    break;
                case 'scp':
                    this.scpSecretLaboratory(message, args, settings);
                    break;
                default:
                    this.wrongGame(message);
            }
        }
    }

    help(message) {
        message.reply(this.settings.help.stop)
            .then(() => {
                message.delete();
            });
    }

    wrongGame(message) {
        message.reply(this.settings.wrongGame)
            .then(replyMessage => {
                message.delete();
                setTimeout(() => {
                    replyMessage.delete();
                }, 5000);
            });
    }

    scpSecretLaboratory(message, args, settings) {
        const importScpSecretLaboratory = this.esmImport('./scpSecretLaboratory');
        new importScpSecretLaboratory.ScpSecretLaboratory(message, args, settings);
    }

    scpSecretLaboratoryHelp(message) {
        message.reply(this.settings.scpSecretLaboratory.host.help)
            .then(() => {
                message.delete();
            });
    }
}
